{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j5f9mgi7Ml_0","executionInfo":{"status":"ok","timestamp":1713292256595,"user_tz":240,"elapsed":25188,"user":{"displayName":"Matthew Farah","userId":"09192718233268265052"}},"outputId":"a42df8c3-2b16-46da-c362-4ef7c40a370a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount(\"/content/drive\", force_remount= True)"]},{"cell_type":"code","source":["!pip install endaq"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pdobtg8ZM3SF","executionInfo":{"status":"ok","timestamp":1713292269032,"user_tz":240,"elapsed":12438,"user":{"displayName":"Matthew Farah","userId":"09192718233268265052"}},"outputId":"1115ed2c-43b5-4a3a-b53c-5f8c0b237959"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting endaq\n","  Downloading endaq-1.5.2-py3-none-any.whl (112 kB)\n","\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/112.6 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[90m╺\u001b[0m\u001b[90m━━━\u001b[0m \u001b[32m102.4/112.6 kB\u001b[0m \u001b[31m2.8 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m112.6/112.6 kB\u001b[0m \u001b[31m2.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting ebmlite>=3.2.0 (from endaq)\n","  Downloading ebmlite-3.3.1-py3-none-any.whl (92 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m92.2/92.2 kB\u001b[0m \u001b[31m11.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting idelib>=3.2.3 (from endaq)\n","  Downloading idelib-3.2.9-py3-none-any.whl (95 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m95.9/95.9 kB\u001b[0m \u001b[31m13.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from endaq) (3.1.3)\n","Requirement already satisfied: numpy>=1.19.5 in /usr/local/lib/python3.10/dist-packages (from endaq) (1.25.2)\n","Requirement already satisfied: pandas>=1.3 in /usr/local/lib/python3.10/dist-packages (from endaq) (2.0.3)\n","Requirement already satisfied: plotly>=5.3.1 in /usr/local/lib/python3.10/dist-packages (from endaq) (5.15.0)\n","Collecting pynmeagps (from endaq)\n","  Downloading pynmeagps-1.0.35-py3-none-any.whl (35 kB)\n","Collecting python-dotenv>=0.18.0 (from endaq)\n","  Downloading python_dotenv-1.0.1-py3-none-any.whl (19 kB)\n","Requirement already satisfied: requests>=2.25.1 in /usr/local/lib/python3.10/dist-packages (from endaq) (2.31.0)\n","Requirement already satisfied: scipy>=1.7.1 in /usr/local/lib/python3.10/dist-packages (from endaq) (1.11.4)\n","Collecting pint>=0.18 (from endaq)\n","  Downloading Pint-0.23-py3-none-any.whl (305 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m305.0/305.0 kB\u001b[0m \u001b[31m26.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.3->endaq) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.3->endaq) (2023.4)\n","Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.3->endaq) (2024.1)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.10/dist-packages (from pint>=0.18->endaq) (4.11.0)\n","Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from plotly>=5.3.1->endaq) (8.2.3)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from plotly>=5.3.1->endaq) (24.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.25.1->endaq) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.25.1->endaq) (3.6)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.25.1->endaq) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.25.1->endaq) (2024.2.2)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->endaq) (2.1.5)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas>=1.3->endaq) (1.16.0)\n","Installing collected packages: ebmlite, python-dotenv, pynmeagps, pint, idelib, endaq\n","Successfully installed ebmlite-3.3.1 endaq-1.5.2 idelib-3.2.9 pint-0.23 pynmeagps-1.0.35 python-dotenv-1.0.1\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import scipy as sp\n","import endaq\n","import math\n","import itertools as it\n","import operator\n","from scipy.signal import butter, filtfilt"],"metadata":{"id":"b6EN0nI9M5pP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#utils\n","\n","def load_data(path, names = None, skip = 1):\n","  return (pd.read_csv(path))\n","                      #header = None,\n","                      #names = names,\n","                      #skiprows = skip))\n","\n","def mag(df):\n","  return(np.sqrt(df[\"AccX(g)\"] **2  + df[\"AccY(g)\"] **2  + df[\"AccZ(g)\"] ** 2))\n","\n","\n","def ft(x):\n","  coeff = np.fft.fft(x)\n","  return [np.real(coeff), np.imag(coeff), coeff]\n","\n","\n","## -- used if data is imported as strings --\n","def filter_str(val):\n","  return(isinstance(val, str))\n","\n","\n","def remove_str(df):\n","  return(df[~df.applymap(filter_str)])\n","\n","## --\n","\n","## Takes in the normalized PSD signal, finds peaks,\n","#locates frequencies associated with those peaks,\n","#returns the average of those peaks.\n","# average dominant frequency\n","\n","def peaks(freq_arr, norm_array, h = 0.8, prom = 0.4):\n","  pks, _ = sp.signal.find_peaks(norm_array, height = h, prominence = prom) #returns indices of peaks\n","  freq_pks = freq_arr[pks] #contains frequencies associated with the peaks\n","\n","  return np.mean(freq_pks)\n","\n","def extract_time(data_frame):\n","  time = data_frame[\"time\"]\n","  section = [time[i].split(\" \")[1] for i in range(len(time))]\n","  sec = np.array([int(i.split(\":\")[-2]) for i in section])\n","  m_sec = np.array ([int(i.split(\":\")[-1]) for i in section])\n","  sec[1:] = sec[1:]-sec[:-1]\n","  sec[0] = 0\n","  m_sec[1:] = m_sec[1:]-m_sec[:-1]\n","  m_sec[0] = 0\n","  p = sec + 0.001*m_sec\n","  return list(it.accumulate(p, operator.add))\n","\n","\n","\n"],"metadata":{"id":"93upRnG8M7mS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Matt Comb Data\n","df_M_amp_comb = load_data(\"/content/drive/MyDrive/DT20/Spring 24/Prototyping/PASS/Data Collection/Cam Data/03 26 2024 cam/cam_11V_lowamp_10osc (1).csv\")\n","t= extract_time(df_M_amp_comb)"],"metadata":{"id":"Xz8ICq6mM9Uv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["accel_x_accelerometer=df_M_amp_comb[\"AccX(g)\"]\n","accel_y_accelerometer=df_M_amp_comb[\"AccY(g)\"]\n","accel_z_accelerometer=df_M_amp_comb[\"AccZ(g)\"]\n","angular_velocity_x_gyroscope=df_M_amp_comb[\"AsX(°/s)\"]\n","angular_velocity_y_gyroscope=df_M_amp_comb[\"AsY(°/s)\"]\n","angular_velocity_z_gyroscope=df_M_amp_comb[\"AsZ(°/s)\"]\n","euler_angle_x_magnetometer=df_M_amp_comb[\"AngleX(°)\"]\n","euler_angle_y_magnetometer=df_M_amp_comb[\"AngleY(°)\"]\n","euler_angle_z_magnetometer=df_M_amp_comb[\"AngleZ(°)\"]"],"metadata":{"id":"_ULwy7o5wYNh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(euler_angle_x_magnetometer)\n","print(euler_angle_y_magnetometer)\n","print(euler_angle_z_magnetometer)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9wgjY5Frwcq0","executionInfo":{"status":"ok","timestamp":1713292274078,"user_tz":240,"elapsed":10,"user":{"displayName":"Matthew Farah","userId":"09192718233268265052"}},"outputId":"f033e4fd-913c-4dc6-f548-9ed64c498118"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0     93.25\n","1     93.06\n","2     92.97\n","3     92.87\n","4     92.88\n","      ...  \n","90    92.75\n","91    92.92\n","92    93.11\n","93    93.33\n","94    93.44\n","Name: AngleX(°), Length: 95, dtype: float64\n","0      9.93\n","1     10.64\n","2     10.42\n","3     10.48\n","4      7.54\n","      ...  \n","90     9.88\n","91     7.08\n","92     5.36\n","93     4.73\n","94     5.94\n","Name: AngleY(°), Length: 95, dtype: float64\n","0     79.16\n","1     79.13\n","2     79.12\n","3     79.14\n","4     79.10\n","      ...  \n","90    79.24\n","91    79.21\n","92    79.21\n","93    79.20\n","94    79.26\n","Name: AngleZ(°), Length: 95, dtype: float64\n"]}]},{"cell_type":"code","source":["dt=1/5\n","Euler_angles=[0,0,0]\n","skew_symmetric_angular_velocity_matrix=[[0,0,0],\n","                                        [0,0,0],\n","                                        [0,0,0]]\n","velocity_vector=[0,0,0]\n","position_vector=[0,0,0]\n","size=len(accel_x_accelerometer)\n","total_velocity_matrix=np.zeros((3, size))\n","total_position_matrix=np.zeros((3, size))\n","current_acceleration_vector=[0,0,0]\n","total_acceleration_matrix=np.zeros((3,size))\n","for i in range(0, len(accel_x_accelerometer)):#l\n","  if (i!=0):\n","    total_acceleration_matrix[0][i]=current_acceleration_vector[0]\n","    total_acceleration_matrix[1][i]=current_acceleration_vector[1]\n","    total_acceleration_matrix[2][i]=current_acceleration_vector[2]\n","    next_velocity=[current_acceleration_vector[0]*dt+total_velocity_matrix[0][i-1], current_acceleration_vector[1]*dt+total_velocity_matrix[1][i-1], current_acceleration_vector[2]*dt+total_velocity_matrix[2][i-1]]\n","    total_velocity_matrix[0][i]=next_velocity[0]\n","    total_velocity_matrix[1][i]=next_velocity[1]\n","    total_velocity_matrix[2][i]=next_velocity[2]\n","    next_position=[total_velocity_matrix[0][i]*dt+total_position_matrix[0][i-1], total_velocity_matrix[1][i]*dt+total_position_matrix[1][i-1],total_velocity_matrix[2][i]*dt+total_position_matrix[2][i-1]]\n","    total_position_matrix[0][i]=next_position[0]\n","    total_position_matrix[1][i]=next_position[1]\n","    total_position_matrix[2][i]=next_position[2]\n","  current_acceleration_accelerometer=np.array([accel_x_accelerometer[i], accel_y_accelerometer[i], accel_z_accelerometer[i]])\n","  current_euler_angle_magnetometer=np.array([euler_angle_x_magnetometer[i], euler_angle_y_magnetometer[i], euler_angle_z_magnetometer[i]])\n","  skew_symmetric_angular_velocity_matrix=np.array([[0, -1*angular_velocity_z_gyroscope[i], angular_velocity_y_gyroscope[i]],\n","                                          [angular_velocity_z_gyroscope[i], 0, -1*angular_velocity_x_gyroscope[i]],\n","                                          [-1*angular_velocity_y_gyroscope[i], angular_velocity_x_gyroscope[i], 0]])\n","  if (i==0):\n","      angular_acceleration_vector=np.array([(angular_velocity_x_gyroscope[i])/dt, (angular_velocity_y_gyroscope[i])/dt, (angular_velocity_z_gyroscope[i])/dt])\n","  else:\n","    angular_acceleration_vector=np.array([(angular_velocity_x_gyroscope[i]-angular_velocity_x_gyroscope[i-1])/dt, (angular_velocity_y_gyroscope[i]-angular_velocity_y_gyroscope[i-1])/dt, (angular_velocity_z_gyroscope[i]-angular_velocity_z_gyroscope[i-1])/dt])\n","  skew_symmetry_angular_acceleration_matrix=np.array([[0, -angular_acceleration_vector[2], angular_acceleration_vector[1]],\n","                                             [angular_acceleration_vector[2], 0, -angular_acceleration_vector[0]],\n","                                             [-angular_acceleration_vector[1], angular_acceleration_vector[0], 0]])\n","  rotation_matrix=np.array([[math.cos(math.radians(euler_angle_y_magnetometer[i]))*math.cos(math.radians(euler_angle_z_magnetometer[i])), -math.sin(math.radians(euler_angle_z_magnetometer[i]))*math.cos(math.radians(euler_angle_x_magnetometer[i]))+math.sin(math.radians(euler_angle_x_magnetometer[i]))*math.sin(math.radians(euler_angle_y_magnetometer[i]))*math.cos(math.radians(euler_angle_z_magnetometer[i])), math.sin(math.radians(euler_angle_x_magnetometer[i]))*math.sin(math.radians(euler_angle_z_magnetometer[i]))+math.cos(math.radians(euler_angle_x_magnetometer[i]))*math.sin(math.radians(euler_angle_y_magnetometer[i]))*math.cos(math.radians(euler_angle_z_magnetometer[i]))],\n","                   [math.cos(math.radians(euler_angle_y_magnetometer[i]))*math.sin(math.radians(euler_angle_z_magnetometer[i])), math.cos(math.radians(euler_angle_z_magnetometer[i]))*math.cos(math.radians(euler_angle_x_magnetometer[i]))+math.sin(math.radians(euler_angle_x_magnetometer[i]))*math.sin(math.radians(euler_angle_y_magnetometer[i]))*math.sin(math.radians(euler_angle_z_magnetometer[i])), -math.sin(math.radians(euler_angle_x_magnetometer[i]))*math.cos(math.radians(euler_angle_z_magnetometer[i]))+math.cos(math.radians(euler_angle_x_magnetometer[i]))*math.sin(math.radians(euler_angle_y_magnetometer[i]))*math.cos(math.radians(euler_angle_z_magnetometer[i]))],\n","                   [-math.sin(math.radians(euler_angle_y_magnetometer[i])), math.cos(math.radians(euler_angle_y_magnetometer[i]))*math.sin(math.radians(euler_angle_x_magnetometer[i])), math.cos(math.radians(euler_angle_x_magnetometer[i]))*math.cos(math.radians(euler_angle_y_magnetometer[i]))]])\n","\n","  result_matrix = np.dot(rotation_matrix,\n","                       (current_acceleration_accelerometer.reshape(3,1)\n","                        - 2 * np.dot(np.dot(skew_symmetric_angular_velocity_matrix, rotation_matrix), total_velocity_matrix[:, i:i+1])\n","                        - np.dot(np.dot(skew_symmetry_angular_acceleration_matrix + np.dot(skew_symmetric_angular_velocity_matrix, skew_symmetric_angular_velocity_matrix), rotation_matrix), total_position_matrix[:, i]).reshape(-1,1)\n","                       ))\n","  current_acceleration_vector=result_matrix.flatten()\n","total_velocity_matrix=total_velocity_matrix\n","print(total_velocity_matrix)"],"metadata":{"id":"TTwH2ae4M-n8","executionInfo":{"status":"ok","timestamp":1713292274078,"user_tz":240,"elapsed":8,"user":{"displayName":"Matthew Farah","userId":"09192718233268265052"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"4868643b-b0a3-4cb8-e557-64a2db9dfca3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 0.00000000e+00  1.53252707e-02 -2.86290124e-04  2.61525182e-03\n","   8.50913558e-02  1.09997034e+00 -2.74344987e+01 -3.12665478e+01\n","  -4.45607169e+03 -8.01384001e+03 -2.15976304e+05 -2.79022555e+05\n","  -2.36490501e+05 -4.04286608e+05 -4.46460182e+06 -3.96185785e+07\n","  -1.52573389e+08  4.81451348e+08  1.63482370e+10  6.84342047e+11\n","   3.54560509e+12  3.36682403e+12 -4.94241451e+12  8.20220595e+13\n","   1.55677374e+15  2.26366693e+16  2.05451939e+16  4.80265132e+16\n","  -2.77524462e+17  1.41863232e+18 -2.40618599e+16  4.10321040e+18\n","   3.91441396e+18 -8.02723821e+18 -3.00764316e+19  1.27657151e+21\n","   6.16972166e+22 -2.63526199e+23 -8.32902728e+24 -7.56045068e+25\n","  -1.75512071e+26  1.25820811e+26  7.65715898e+25  5.90196237e+27\n","   8.33195855e+28  6.58699935e+29 -2.61502494e+29  6.09510993e+30\n","   3.78877921e+32  8.54695422e+32  3.52311512e+33  3.92445316e+33\n","  -6.71175126e+33 -1.28581857e+35  1.53952067e+36  2.09766868e+36\n","   9.53232893e+36  5.37436273e+37 -1.13806929e+38 -1.00949454e+38\n","  -1.53827941e+38 -2.26688729e+38 -9.49404676e+38 -5.72029876e+40\n","   2.61448091e+40  5.09656516e+41 -6.57746176e+42 -2.53010151e+44\n","  -1.42382770e+45 -1.84515221e+45  2.17829796e+45 -2.47671394e+46\n","  -1.91181324e+47 -5.36089404e+48 -3.17815707e+48  1.25182331e+50\n","   2.57018424e+49 -1.12948048e+51  2.33054821e+52  1.26937356e+52\n","   3.47139031e+52  1.35148062e+52  3.85728341e+53  3.97829365e+54\n","   4.48997161e+55 -8.15214929e+55 -7.43878958e+56 -1.49092455e+58\n","  -2.23339500e+58 -9.07088490e+58 -1.32924284e+59 -7.37657483e+60\n","  -2.47290380e+61 -9.59857994e+61 -4.88918620e+61]\n"," [ 0.00000000e+00 -9.09689152e-03 -1.40312324e-01 -1.73914488e-01\n","   1.33410886e-01  1.76402236e+01 -6.64226305e+01  1.56220473e+02\n","  -1.37722060e+04 -5.32666564e+04 -1.53374349e+06 -3.07187808e+06\n","  -3.85012528e+06 -1.03999852e+06 -9.16845386e+06 -1.57883905e+09\n","  -2.73272457e+08 -9.24310938e+09  3.71698556e+10  4.30581380e+12\n","   1.97998283e+13  3.09042463e+13  6.00225781e+13 -5.77508846e+13\n","   1.06149063e+16  1.55709057e+17  1.39245509e+17  4.23989525e+17\n","   7.41957257e+17  8.63143601e+18 -5.74407601e+19 -6.55624073e+19\n","  -7.96650441e+19 -7.91471084e+19  6.18989357e+20 -1.43498565e+22\n","   3.31377356e+23 -2.27059980e+24 -6.39200350e+25 -3.08488846e+26\n","  -1.36182765e+27 -2.65611511e+27 -2.76560342e+27  5.39644528e+28\n","  -1.13290947e+30  2.20572599e+29 -1.98621552e+27  2.63295690e+31\n","   2.25465882e+33  1.06352728e+34  8.12975585e+33  8.63966572e+33\n","   1.42989296e+33 -8.88135303e+35  5.36782883e+36  2.66852564e+35\n","   1.24223118e+38  2.95189041e+37 -7.98444716e+38 -1.23753506e+39\n","  -1.28749816e+39 -2.85935043e+38  2.11423689e+39 -4.60465945e+41\n","   1.12649665e+41 -7.31338973e+41 -3.89301230e+43 -2.16637607e+45\n","  -1.01047805e+46 -1.22779496e+46 -1.32275569e+46 -4.37798489e+46\n","   7.01519132e+46 -3.66154577e+49 -7.01691950e+48  7.57421917e+50\n","   1.15239632e+51 -1.35860415e+52  1.74317006e+53  2.47658462e+53\n","   1.68144117e+53  3.68901501e+53  3.84107658e+54  1.89972207e+55\n","   2.13198929e+56 -1.25372605e+57 -7.84248368e+57 -1.11966108e+59\n","  -1.77611702e+59 -5.79630427e+59 -4.53684505e+59 -4.84389817e+61\n","  -1.83789970e+62 -3.02705913e+62 -3.49826426e+62]\n"," [ 0.00000000e+00  2.00621908e-01 -1.17595117e-02  4.53925275e-02\n","   4.84776590e-01 -1.22727410e+01  4.96437631e+01 -1.32450280e+03\n","  -1.55550783e+04 -4.48165496e+04 -6.59674587e+05  3.70284070e+05\n","   4.15615562e+05  1.35761006e+06 -1.51913606e+08  7.48497587e+08\n","  -2.42759079e+09  9.60050334e+09  5.66330849e+10  1.33029353e+12\n","   1.02723564e+13 -3.92318481e+13  6.34183886e+13  3.86963047e+11\n","   7.81630692e+15 -9.63271520e+15  4.03348663e+16  6.98704521e+17\n","  -6.74434809e+17 -1.48412592e+19  2.05544578e+19 -1.41408718e+19\n","  -1.97285964e+19  1.34077530e+20 -1.76230133e+21  1.48394063e+22\n","  -2.19242766e+23 -1.80177590e+24 -1.64817008e+25 -3.25068616e+26\n","  -6.27295177e+26  1.87916820e+27  5.14016398e+26 -1.23529634e+29\n","   5.79094042e+29  2.15144711e+29  7.75769446e+30  2.13561009e+31\n","   5.93869201e+32  1.42959850e+33 -1.25139493e+34 -1.29368515e+34\n","  -7.04128483e+33  7.37185361e+35 -5.24059334e+36  1.55747935e+37\n","   1.72746939e+38 -1.99321182e+38 -1.73319191e+38 -1.29427824e+38\n","   3.62319894e+38  8.47728957e+38 -5.21514673e+40  3.07858325e+41\n","  -1.58701711e+42 -4.70501591e+42 -2.68526953e+43 -5.23348487e+44\n","  -6.00285434e+45  1.19235533e+46  4.32229916e+45  2.15814202e+46\n","  -2.46709141e+48  1.98029220e+49  5.30448780e+49  3.10860778e+50\n","  -5.87986647e+50  2.46455483e+52 -7.98565982e+52  8.56329465e+51\n","  -4.86146615e+52  2.31309351e+53  2.69937156e+53  1.31470806e+55\n","  -9.79209589e+55 -3.94150995e+56 -3.60386563e+57 -5.07978244e+58\n","   9.66645293e+58 -2.62463121e+59 -2.03831244e+59 -7.51283237e+60\n","  -9.88868475e+61  3.79436182e+61 -4.14029323e+62]]\n"]}]},{"cell_type":"code","source":["plt.semilogy(t[10:], total_velocity_matrix[0][10:])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"F70Ebsbjqxus","executionInfo":{"status":"ok","timestamp":1713292274646,"user_tz":240,"elapsed":574,"user":{"displayName":"Matthew Farah","userId":"09192718233268265052"}},"outputId":"9fabd5d8-f858-4bb5-f19c-82f42b81559f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7acc47d57040>]"]},"metadata":{},"execution_count":9},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.semilogy(t[10:], total_velocity_matrix[1][10:])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"FnROBcHmq-is","executionInfo":{"status":"ok","timestamp":1713292275477,"user_tz":240,"elapsed":836,"user":{"displayName":"Matthew Farah","userId":"09192718233268265052"}},"outputId":"86f0d972-dabf-4a75-c613-8f15ec953929"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7acc45a009d0>]"]},"metadata":{},"execution_count":10},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["plt.plot(t, total_velocity_matrix[2][:])"],"metadata":{"id":"1S5pjBbyrFdc","executionInfo":{"status":"ok","timestamp":1713292276176,"user_tz":240,"elapsed":702,"user":{"displayName":"Matthew Farah","userId":"09192718233268265052"}},"outputId":"c475068c-6a66-4ed2-fdcd-8e6dfe36cd3d","colab":{"base_uri":"https://localhost:8080/","height":463}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[<matplotlib.lines.Line2D at 0x7acc45a39f30>]"]},"metadata":{},"execution_count":11},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":[],"metadata":{"id":"ptyrnLlcQEZX"}},{"cell_type":"markdown","source":[],"metadata":{"id":"ieJY5Fymmmxr"}}]}